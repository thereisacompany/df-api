<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dfrecvcle.dfsystem.live.mappers.FeedbackMapper">
    <resultMap id="BaseResultMap" type="com.dfrecvcle.dfsystem.live.entities.Feedback">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="content" jdbcType="VARCHAR" property="content" />
        <result column="mail" jdbcType="VARCHAR" property="mail" />
        <result column="response" jdbcType="VARCHAR" property="response" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    </resultMap>

    <sql id="Base_Column_List">
        id, title, content, response, mail, created_at, created_by, updated_at, updated_by
    </sql>

    <insert id="insertFeedback" parameterType="com.dfrecvcle.dfsystem.live.entities.Feedback">
        insert into df_feedback (id,username,phone,address,question, content, mail, response, created_at, created_by, updated_at, updated_by)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
        #{mail,jdbcType=VARCHAR}, #{response,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP},
        #{createdBy, jdbcType=VARCHAR}, #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy, jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.dfrecvcle.dfsystem.live.entities.Feedback">
        update df_feedback
        <set>
<!--            <if test="title != null">-->
<!--                title = #{title,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="content != null">-->
<!--                content = #{content,jdbcType=VARCHAR},-->
<!--            </if>-->
            response = #{response,jdbcType=VARCHAR},
            updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            updated_by = #{updatedBy,jdbcType=VARCHAR}
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getListByCreatedByAndCreatedAt" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from df_feedback
        where 1=1
        <if test="username != null and username != ''">
            and created_by = ${username}
        </if>
        <if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
            <bind name="bindBeginDate" value="beginDate + ' 00:00:00'"/>
            <bind name="bindEndDate" value="endDate + ' 23:59:59'"/>
            and created_at between #{bindBeginDate} and #{bindEndDate}
        </if>
        order by created_at desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="getListByCreatedByAndCreatedAtCount" resultType="java.lang.Integer">
        select count(1)
        from df_feedback
        where 1=1
        <if test="username != null and username != ''">
            and created_by = ${username}
        </if>
        <if test="beginDate != null and beginDate != '' and endDate != null and endDate != ''">
            <bind name="bindBeginDate" value="beginDate +' 00:00:00'"/>
            <bind name="bindEndDate" value="endDate +' 23:59:59'"/>
            and created_at between #{bindBeginDate} and #{bindEndDate}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
            id, title, content,phone,question,response,address, mail, created_at, created_by, updated_at, updated_by

        from df_feedback
        where id = #{id,jdbcType=BIGINT}
    </select>
</mapper>